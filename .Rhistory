??CHAIN
summary(cdf)
image(cdf)
hist(mdf)
hist(cdf)
summary(cdf)
show(cdf)
image(cdf)
help(CHAIN, package=mi)
head(CHAIN)
levels(cdf$mental)
show(mdf)
mdf <- change(mdf, y = c("income", "momrace"), what = "type", to = c("non", "un"))
show(mdf)
summary(cdf$log_virus)
unique(cdf$log_virus)
cdf$log_virus
unique(CHAIN$log_virus)
unique(CHAIN$age)
show(cdf)
head(CHAIN)
unique(CHAIN$healthy)
cdf <- change(cdf, y = c("log_virus", "age", "healthy", "income"), what = "type", to = c("non", "non", "non", "or"))
data(CHAIN, package="mi")
cdf <- missing_data.frame(CHAIN)
cdf <- change(cdf, y = c("log_virus", "age", "healthy", "income"), what = "type", to = c("non", "non", "non", "ord"))
show(cdf)
cdf <- change(cdf, y = c("log_virus"), what = "type", to = c("non"))
show(cdf)
data(CHAIN, package="mi")
cdf <- missing_data.frame(CHAIN)
cdf <- change(cdf, y = c("age", "healthy", "income"), what = "type", to = c("non", "non", "ord"))
cdf <- change(cdf, y = c("age"), what = "type", to = c("non"))
data(CHAIN, package="mi")
cdf <- missing_data.frame(CHAIN)
cdf <- change(cdf, y = "age", what = "type", to = "non")
show(cdf)
head(CHAIN)
cdf <- change(cdf, y = "healthy", what = "type", to = "non")
show(cdf)
data(CHAIN, package="mi")
cdf <- missing_data.frame(CHAIN)
summary(cdf)
data(nlsyV, package = "mi")
mdf <- missing_data.frame(nlsyV)
show(mdf)
head(nlsyV)
show(cdf)
cdf <- change(cdf, y = "income", what = "type", to = "ord")
show(cdf)
data(nlsyV, package = "mi")
mdf <- missing_data.frame(nlsyV)
show(mdf)
mdf <- change(mdf, y = c("income", "momrace"), what = "type", to = c("non", "un"))
cdf <- change(cdf, y = "age", what = "type", to = "non")
cdf <- change(cdf, y = c("age", "age_1", "age_0", what = "type", to = c("non", "non", "non")
)
cdf <- change(cdf, y = c("age", "age_1", "age_0"), what = "type", to = c("non", "non", "non"))
cdf <- change(cdf, y = c("age_1", "age_0"), what = "type", to = c("non", "non"))
cdf <- change(cdf, y = c("age"), what = "type", to = c("non"))
cdf <- change(cdf, y = "age", what = "type", to = "non")
is.numeric(CHAIN$age)
is.numeric(cdf$age)
cdf$age
cdf$age <- is.numeric(cdf$age)
show(cdf)
mdf <- change(mdf, y = c("income", "momrace"), what = "type", to = c("non", "un"))
show(mdf)
cdf <- change(cdf, y = c("log_virus", "income"), what = "type", to = c("non","ord"))
show(cdf)
help(CHAIN, package=mi)
image(cdf)
hist(cdf)
rm(CHAIN)
options(mc.cores = 2)
imputations <- mi(cdf, n.iter = 30, n.chains = 4, max.minutes = 20)
show(imputations)
round(mipply(imputations, mean, to.matrix = TRUE), 3)
Rhats(imputations)
imputations <- mi(imputations, n.iter = 10)
Rhats(imputations)
plot(imputations)
plot(imputations)
plot(imputations, y = c("log_virus:is zero", "log_virus"))
plot(imputations, y = c("log_virus:is zero", "log_virus", "age"))
hist(imputations)
image(imputations)
summary(imputations)
summary(imputations)
round(mipply(imputations, mean, to.matrix = TRUE), 3)
Rhats(imputations)
analysis <- pool(log_virus ~ age + income + healthy + mental + damage
+ treatment, data = imputations, m = 5)
display(analysis)
data(CHAIN, package="mi")
cdf <- missing_data.frame(CHAIN)
head(CHAIN)
cdf <- change(cdf, y = c("log_virus", "income"), what = "type",
to = c("non","non"))
data(CHAIN, package="mi")
cdf <- missing_data.frame(CHAIN)
cdf <- change(cdf, y = c("log_virus"), what = "type",
to = c("non"))
show(cdf)
rm(CHAIN)
# good to remove large unnecessary objects to save RAM
options(mc.cores = 2)
imputations <- mi(cdf, n.iter = 30, n.chains = 4, max.minutes = 20)
show(imputations)
round(mipply(imputations, mean, to.matrix = TRUE), 3)
cdf <- change(cdf, y = c("age", "income", "healthy"), what = "type",
to = c("non", "non", "non"))
Rhats(imputations)
imputations <- mi(imputations, n.iter = 10)
round(mipply(imputations, mean, to.matrix = TRUE), 3)
imputations <- mi(imputations, n.iter = 20)
round(mipply(imputations, mean, to.matrix = TRUE), 3)
imputations <- mi(imputations, n.iter = 20)
Rhats(imputations)
round(mipply(imputations, mean, to.matrix = TRUE), 3)
analysis <- pool(log_virus ~ age + income + healthy + mental + damage
+ treatment, data = imputations, m = 5)
display(analysis)
is.numeric(age)
is.numeric(CHAIN$age)
head(CHAIN)
head(CHAIN)
cdf <- change(cdf, y = c("log_virus"), what = "type",
to = c("non"))
cdf <- change(cdf, y = c("age", "income", "healthy"), what = "type",
to = c("non", "non", "non"))
data(CHAIN, package="mi")
cdf <- missing_data.frame(CHAIN)
round(mipply(imputations, mean, to.matrix = TRUE), 3)
head(CHAIN)
is.numeric(CHAIN$age)
is.numeric(CHAIN$income)
is.numeric(CHAIN$log_virus)
is.numeric(CHAIN$healthy)
is.factor(CHAIN$mental)
is.numeric(CHAIN$mental)
round(mipply(imputations, mean, to.matrix = TRUE), 3)
summary(chain$income)
summary(CHAIN$income)
Rhats(imputations)
summary(CHAIN$healthy)
analysis
show(cdf)
cdf <- change(cdf, y = c("log_virus"), what = "type",
to = c("non"))
show(cdf)
summary(CHAIN$log_virus)
analysis
data(CHAIN, package="mi")
cdf <- missing_data.frame(CHAIN)
image(cdf)
show(cdf)
head(CHAIN)
cdf <- change(cdf, y = c("log_virus"), what = "type",
to = c("non"))
show(cdf)
cdf <- change(cdf, y = c("log_virus"), what = "type", to = c("non"))
show(cdf)
rm(CHAIN)
options(mc.cores = 2)
imputations <- mi(cdf, n.iter = 30, n.chains = 4, max.minutes = 20)
show(imputations)
round(mipply(imputations, mean, to.matrix = TRUE), 3)
Rhats(imputations)
imputations <- mi(imputations, n.iter = 80)
Rhats(imputations)
show(imputations)
round(mipply(imputations, mean, to.matrix = TRUE), 3)
imputations <- mi(imputations, n.iter = 80)
Rhats(imputations)
show(imputations)
round(mipply(imputations, mean, to.matrix = TRUE), 3)
imputations <- mi(cdf, n.iter = 30, n.chains = 4, max.minutes = 20)
round(mipply(imputations, mean, to.matrix = TRUE), 3)
Rhats(imputations)
imputations <- mi(imputations, n.iter = 150)
imputations <- mi(imputations, n.iter = 150)
round(mipply(imputations, mean, to.matrix = TRUE), 3)
round(mipply(imputations, mean, to.matrix = TRUE), 3)
Rhats(imputations)
show(imputations)
plot(imputations)
plot(imputations, y = c("log_virus:is zero", "log_virus", "income"))
summary(imputations)
dfs <- complete(imputations, m = 2)
dfs
head(dfs)
summary(imputations)
is.factor(CHAIN$damage)
data(CHAIN, package="mi")
is.factor(CHAIN$damage)
CHAIN$treatment <- as.factor(CHAIN$treatment)
CHAIN$mental <- as.factor(CHAIN$mental)
CHAIN$damage <- as.factor(CHAIN$damage)
CHAIN$treatment <- as.factor(CHAIN$treatment)
lm.fit <- lm(log_virus~age + income + healthy + mental + damage + treatment)
CHAIN$mental <- as.factor(CHAIN$mental)
CHAIN$damage <- as.factor(CHAIN$damage)
CHAIN$treatment <- as.factor(CHAIN$treatment)
lm.fit <- lm(log_virus ~ age + income + healthy + mental + damage +
treatment, data = CHAIN)
summary(lm.fit)
display(analysis)
xtable(show(cdf))
require(xtable)
xtable(show(cdf))
show(cdf)$type
data.frame(show(cdf))
data.frame(show(cdf))$type
names(show(cdf))
str(show(cdf))
show(cdf)
table(show(cdf))
table(cdf)
show(cdf)@type
show(cdf, type)
?show()
help(CHAIN, package=mi)
xtable(round(mipply(imputations, mean, to.matrix = TRUE), 3))
xtable(Rhats(imputations))
display(analysis)
analysis <- pool(log_virus ~ age + income + healthy + mental + damage
+ treatment, data = imputations, m = 5)
display(analysis)
summary(CHAIN$damage)
solve(beta0+beta1*c.age+beta4*c.age^2=beta0+beta2+(beta1+beta5)*c.age+beta4*c.age^2)
?rootSolve
beta0
beta0 <- summary(lme.bill4)$tTable[1]
beta1 <- summary(lme.bill4)$tTable[2]
beta2 <- summary(lme.bill4)$tTable[3]
beta3 <- summary(lme.bill4)$tTable[4]
beta4 <- summary(lme.bill4)$tTable[5]
beta5 <- summary(lme.bill4)$tTable[6]
beta6 <- summary(lme.bill4)$tTable[7]
lme.bill2 <- lme(bill_pc1 ~ age*trt + sex*age + sex*trt
+ I(age^2)*sex, data
= morph.early, random = ~ 1 | bird, method = "ML")
#anova(lme.bill2)
morph.early$c.age <- with(morph.early, age-mean(age))
lme.bill4 <- lme(bill_pc1 ~ c.age*trt + sex*c.age + I(c.age^2)*sex, data
= morph.early, random = ~ 1 | bird, method = "ML")
xtable(summary(lme.bill4)$tTable)
morph.early$sex.m <- factor(morph.early$sex, levels=c("m", "f"))
lme.maleref <- lme(bill_pc1 ~ c.age*trt + sex.m*c.age + I(c.age^2)*sex.m,
data = morph.early, random = ~ 1 | bird, method = "ML")
require(nlme)
lme.bill2 <- lme(bill_pc1 ~ age*trt + sex*age + sex*trt
+ I(age^2)*sex, data
= morph.early, random = ~ 1 | bird, method = "ML")
#anova(lme.bill2)
morph.early$c.age <- with(morph.early, age-mean(age))
lme.bill4 <- lme(bill_pc1 ~ c.age*trt + sex*c.age + I(c.age^2)*sex, data
= morph.early, random = ~ 1 | bird, method = "ML")
xtable(summary(lme.bill4)$tTable)
morph.early$sex.m <- factor(morph.early$sex, levels=c("m", "f"))
lme.maleref <- lme(bill_pc1 ~ c.age*trt + sex.m*c.age + I(c.age^2)*sex.m,
data = morph.early, random = ~ 1 | bird, method = "ML")
temps.plot
temps             <- read.csv("~/Documents/comps/quailTemps.csv", head=T)
names(temps)[1:4] <- c("bird", "sex", "trt", "temp")
names(temps)[5:8] <- c("billtemp", "feathertemp", "eyetemp", "notes")
morphs <- read.csv("~/Documents/comps/quailMorph.csv", head=T)
temps.plot <- temps %>%
group_by(sex, trt, temp) %>%
summarise("mnbilltemp"=mean(billtemp))
temps.plot <- left_join(temps, temps.plot)
temps.plot$trt <- as.factor(temps.plot$trt)
#require(lattice)
#xyplot(mnbilltemp~temp|sex, group=trt, temps.plot, pch=c(1,2),
#      ylab="Bill Temp", xlab="Ambient Temp", type=c("p", "l"),
#     main="bill temp vs. ambient temp by sex and treatment")
require(ggplot2)
ggplot(temps.plot, aes(temp, mnbilltemp))+geom_point(size=5)+
geom_line(aes(group=trt, linetype=trt, color=trt))+
facet_wrap(~sex)+
geom_point(aes(temp, billtemp, col=trt, shape=trt), size=3, temps.plot)+
xlab("Ambient Temp")+
ylab("Bill Temp")+
ggtitle("Bill Temp vs. Ambient Temp by Sex and Treatment")
require(dplyr)
temps.plot <- temps %>%
group_by(sex, trt, temp) %>%
summarise("mnbilltemp"=mean(billtemp))
temps.plot <- left_join(temps, temps.plot)
temps.plot$trt <- as.factor(temps.plot$trt)
#require(lattice)
#xyplot(mnbilltemp~temp|sex, group=trt, temps.plot, pch=c(1,2),
#      ylab="Bill Temp", xlab="Ambient Temp", type=c("p", "l"),
#     main="bill temp vs. ambient temp by sex and treatment")
require(ggplot2)
ggplot(temps.plot, aes(temp, mnbilltemp))+geom_point(size=5)+
geom_line(aes(group=trt, linetype=trt, color=trt))+
facet_wrap(~sex)+
geom_point(aes(temp, billtemp, col=trt, shape=trt), size=3, temps.plot)+
xlab("Ambient Temp")+
ylab("Bill Temp")+
ggtitle("Bill Temp vs. Ambient Temp by Sex and Treatment")
xyplot(mnbilltemp~trt|sex, temps.plot, pch=c(1,2),
ylab="Bill Temp", xlab="Ambient Temp", type=c("p", "l"),
main="bill temp vs. ambient temp by sex and treatment")
require(lattice)
xyplot(mnbilltemp~trt|sex, temps.plot, pch=c(1,2),
ylab="Bill Temp", xlab="Ambient Temp", type=c("p", "l"),
main="bill temp vs. ambient temp by sex and treatment")
temps.plot
temps.plot <- temps %>%
group_by(sex, trt, temp) %>%
summarise("mnbilltemp"=mean(billtemp))
xyplot(mnbilltemp~trt|sex, temps.plot, pch=c(1,2),
ylab="Bill Temp", xlab="Ambient Temp", type=c("p", "l"),
main="bill temp vs. ambient temp by sex and treatment")
lme.temps <- lme(billtemp ~ temp*trt+temp*sex+trt*sex,
data = temps, random = ~ 1 | bird, method = "ML")
anova(lme.temps, type="marginal")
ggplot(temps.plot, aes(trt, mnbilltemp))+geom_point(size=5)+
geom_line(aes(group=sex, linetype=sex, color=sex))
temps.plot
library("devtools")
install_github("ramnathv/slidify")
install_github("ramnathv/slidify")
install_github("ramnathv/slidify")
curl-config
install.packages("RCurl")
install.packages("RCurl")
install.packages("RCurl")
install.packages("RCurl")
install_github("ramnathv/slidify")
sessionInfo()
require(curl_0.9.1)
getCurlOptionsConstants()[["connecttimeout"]]
install.packages("RCurl")
install.packages("RCurl")
getCurlOptionsConstants()[["connecttimeout"]]
require(RCurl)
getCurlOptionsConstants()[["connecttimeout"]]
myOpts <- curlOptions(connecttimeout = 200)
require(devtools)
install_github("ramnathv/slidify")
myOpts <- curlOptions(connecttimeout = 500)
install_github("ramnathv/slidify")
?curlOptions
getCurlOptionsConstants()[["connecttimeout"]]
install_github("ramnathv/slidify", .opts=myOpts)
curlOptions(connecttimeout = 500)
getCurlOptionsConstants()[["connecttimeout"]]
install_github("ramnathv/slidify", curlOptioins(connectimeout=500))
install_github("ramnathv/slidify", curlOptions(connectimeout=500))
options(download.file.method = "wininet")
library("devtools")
install_github("ramnathv/slidify")
install_github("hadley/httr")
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("geoR")
install.packages("plyr")
install.packages("dplyr")
sessionInfo(
)
require(ggplot2)
install.packages("plyr")
install.packages("plyr")
sessionInfo()
?download.file
library(devtools)
install_github("ramnathv/slidify")
library(slidify)
setwd("~/Documents/WritingProject/presentation")
slidify("fishpresak.Rmd")
slidify("fishpresak.Rmd")
slidify("fishpresak.Rmd")
slidify("fishpresak.Rmd")
install.packages("car")
install.packages("quantreg")
install.packages("SparseM")
install.packages("SparseM")
install.packages("SparseM")
```{r, ols, echo=FALSE}
install.packages("quantreg")
library(devtools)
setwd(~/)
setwd(~/home)
setwd("~/home")
setwd("~/Documents")
install_local("~/Downloads/SparseM_1.7.tar.gz")
setwd("~/Documents/WritingProject/presentation/fishpresak.Rmd")
setwd("~/Documents/WritingProject/presentation")
slidify("fishpres.Rmd")
browseURL("fishpres.html")
browseURL("fishpresak.html")
2013-1994
1-0.9906
0.0094*19
0.9906^13
0.9906^19
1-0.8357
0.9939^19
1-0.8902
1-.9872
1-0.9872^19
0.164*29
0.164*32
32-5
slidify("fishpresak.Rmd")
slidify("fishpresak.Rmd")
slidify("fishpresak.Rmd")
slidify("fishpresak.Rmd")
slidify("fishpresak.Rmd")
slidify("fishpresak.Rmd")
slidify("fishpresak.Rmd")
slidify("fishpres.Rmd")
slidify("fishpresak.Rmd")
slidify("fishpresak.Rmd")
slidify("fishpresak.Rmd")
install.packages("SparseM")
install.packages("quantreg")
install.packages("car")
.9941^19
slidify("fishpresak.Rmd")
slidify("fishpresak.Rmd")
install.packages("quantreg")
install.packages("quantreg")
install.packages("car")
library(slidify)
slidify("fishpresak.Rmd")
install.packages("gridExtra")
slidify("fishpresak.Rmd")
install.packages("mosaic")
slidify("fishpresak.Rmd")
browseURL("fishpresak.html")
summary(me.length.junken)
exp(-0.009478*19)
1-0.8352
confint(me.length.junken)
exp(19*-0.01283)
1-0.78367
exp(19*-0.006142)
1-0.88986
1-0.7964
1-.7757
1-0.9466
1-0.8033
1-0.9957
slidify("fishpresak.Rmd")
browseURL("fishpresak.html")
slidify("fishpresak.Rmd")
browseURL("fishpresak.html")
summary(lm.cleare.ols)
summary(lm.cleare.wls)
fit.me
slidify("fishpresak.Rmd")
browseURL("fishpresak.html")
slidify("fishpresak.Rmd")
browseURL("fishpresak.html")
slidify("fishpresak.Rmd")
browseURL("fishpresak.html")
summary(lm.cleare.ols)
slidify("fishpresak.Rmd")
browseURL("fishpresak.html")
library(slidify)
slidify("~/Documents/WritingProject/presentation/index.Rmd")
browseURL("~/Documents/WritingProject/presentation/index.Rmd")
browseURL("~/Documents/WritingProject/presentation/index.html")
#cape cleare all alone
me.length.cleare <- lmer(log(length.in)~year+(1|year), data=subset(fish.stat, area=="capecleare"))
me.length.el <- lmer(log(length.in)~year+(1|factor(year)), data=subset(fish.stat, area=="elrington"))
me.length.aialik <- lmer(log(length.in)~year+(1|year), data=subset(fish.stat, area=="aialik"))
me.length.junken <- lmer(log(length.in)~year+(1|year), data=subset(fish.stat, area=="junken"))
me.length.resbay <- lmer(log(length.in)~year+(1|year), data=subset(fish.stat, area=="resbay"))
require(nlme)
#cape cleare all alone
me.length.cleare <- lmer(log(length.in)~year+(1|year), data=subset(fish.stat, area=="capecleare"))
me.length.el <- lmer(log(length.in)~year+(1|factor(year)), data=subset(fish.stat, area=="elrington"))
me.length.aialik <- lmer(log(length.in)~year+(1|year), data=subset(fish.stat, area=="aialik"))
me.length.junken <- lmer(log(length.in)~year+(1|year), data=subset(fish.stat, area=="junken"))
me.length.resbay <- lmer(log(length.in)~year+(1|year), data=subset(fish.stat, area=="resbay"))
require(lme4)
#cape cleare all alone
me.length.cleare <- lmer(log(length.in)~year+(1|year), data=subset(fish.stat, area=="capecleare"))
me.length.el <- lmer(log(length.in)~year+(1|factor(year)), data=subset(fish.stat, area=="elrington"))
me.length.aialik <- lmer(log(length.in)~year+(1|year), data=subset(fish.stat, area=="aialik"))
me.length.junken <- lmer(log(length.in)~year+(1|year), data=subset(fish.stat, area=="junken"))
me.length.resbay <- lmer(log(length.in)~year+(1|year), data=subset(fish.stat, area=="resbay"))
unique(fitted(me.length.junken))
exp(unique(fitted(me.length.junken)))
36*0.165
setwd("~/Documents/WritingProject/presentation")
slidify("fishpresak.Rmd")
slidify("index.Rmd")
browseURL("index.html")
require(MASS)
require(mgcv)
help("mgcv-package")
'help("mgcv-package")'
help(package=mgcv)
help(mgcv-package)
install.packages("mgcv")
install.packages("mgcv")
install.packages("gss")
install.packages("gss")
install.packages("pls")
install.packages("gamair")
install.packages("INLA")
install.packages("INLA")
install.packages("INLA", repos="http://www.math.ntnu.no/inla/R/stable")
require(INLA)
