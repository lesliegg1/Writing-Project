ylab("Mean Length (inches)")
fish.stat <- read.csv("~/Documents/WritingProject/report/datafiles/fishstat.csv")
kable(head(fish.stat[,c(1:8,10)]))
require(ggmap)
seward <- get_map(location =c(-148.9999, 59.70589), zoom=8, maptype="terrain",
filename="~/Documents/WritingProject/seward")
map.file <- read.csv("~/Documents/WritingProject/report/datafiles/mapfile.csv")
#order areas by distance for the purpose of color coding
map.file$area <- factor(map.file$area, levels=c("resbay", "aialik", "whidbey", "junken", "granite", "twoarm", "elrington", "mcarthur", "pye", "capecleare", "straits", "nuka", "patton"))
ggmap(seward, extent = 'normal') +
geom_path(aes(x = lon, y = lat, group=area),
data = subset(map.file, area %in% c("capecleare","aialik",
"elrington",
"resbay", "junken")))+
geom_polygon(aes(fill=area, group=area),
data = subset(map.file, area %in%
c("capecleare","aialik", "elrington",
"resbay", "junken")))+
scale_fill_manual(values=c("red", "green", "purple", "yellow", "brown"))+
geom_segment(aes(x=-149.4296, y= 60.1347, xend = -149.6954, yend = 60.50437),
arrow= arrow(length=unit(0.25,"inches"), ends="first"), size=3)
uprq <- fish.stat %>%
group_by(area, year) %>%
summarise(upperq=quantile(length.in, 0.75, na.rm=TRUE),
lowerq=quantile(length.in, 0.25, na.rm=TRUE),
median=quantile(length.in, 0.5, na.rm=TRUE))
avg.lengths <- merge(avg.lengths, uprq)
ggplot(avg.lengths, aes(as.numeric(as.character(year)), mean.in))+
geom_point(size=3)+
geom_line()+
facet_wrap(~area)+
theme(axis.title.x=element_blank(), axis.text.x=element_text(size=20,
angle=90),
axis.text.y=element_text(size=20),
axis.title.y=element_text(size=18),
strip.text.x=element_text(size=20))+
ylab("Mean Length (inches)")
#do OLS to save for later
lm.el.ols <- lm(mean.in~year, data=subset(avg.lengths, area=="elrington"))
lm.cleare.ols <- lm(mean.in~year, data=subset(avg.lengths, area=="capecleare"))
lm.junken.ols <- lm(mean.in~year, data=subset(avg.lengths, area=="junken"))
lm.aialik.ols <- lm(mean.in~year, data=subset(avg.lengths, area=="aialik"))
lm.resbay.ols <- lm(mean.in~year, data=subset(avg.lengths, area=="resbay"))
summary(lm.cleare.ols)
#Do WLS to save for plot
weights <- fish.stat %>%
group_by(area, year) %>%
summarise(n=length(length.in),
precision=n/var(length.in, na.rm=TRUE)) %>%
ungroup()
lm.el.wls <- lm(mean.in~year, data=subset(avg.lengths, area=="elrington"), weights=subset(weights, area=="elrington")$n)
lm.cleare.wls <- lm(mean.in~year, data=subset(avg.lengths, area=="capecleare"), weights=subset(weights, area=="capecleare")$n)
lm.junken.wls <- lm(mean.in~year, data=subset(avg.lengths, area=="junken"), weights=subset(weights, area=="junken")$n)
lm.aialik.wls <- lm(mean.in~year, data=subset(avg.lengths, area=="aialik"), weights=subset(weights, area=="aialik")$n)
lm.resbay.wls <- lm(mean.in~year, data=subset(avg.lengths, area=="resbay"), weights=subset(weights, area=="resbay")$n)
summary(lm.cleare.wls)
#cape cleare all alone
me.length.cleare <- lmer(length.in~year+(1|year), data=subset(fish.stat, area=="capecleare"))
me.length.el <- lmer(length.in~year+(1|factor(year)), data=subset(fish.stat, area=="elrington"))
me.length.aialik <- lmer(length.in~year+(1|year), data=subset(fish.stat, area=="aialik"))
me.length.junken <- lmer(length.in~year+(1|year), data=subset(fish.stat, area=="junken"))
me.length.resbay <- lmer(length.in~year+(1|year), data=subset(fish.stat, area=="resbay"))
fitme <- unique(fitted(me.length.el))
fit.me.vec <- c(unique(fitted(me.length.aialik)), unique(fitted(me.length.cleare)), unique(fitted(me.length.el)), unique(fitted(me.length.junken)), unique(fitted(me.length.resbay)))
avg.lengths <- arrange(avg.lengths, area)
avg.lengths$fit.me <- fit.me.vec
#el.fun <- function(x) (fixef(me.length.el)[1]+fixef(me.length.el)[2]*x)
#aialik.fun <- function(x) (fixef(me.length.aialik)[1]+fixef(me.length.aialik)[2]*x)
##Add the fitted trend line to this plot
#ggplot(avg.lengths, aes(as.numeric(as.character(year)), fit.me))+
#geom_point(aes(col="darkred", size=2))+
# geom_point(aes(as.numeric(as.character(year)), mean.in), size=2)+
#facet_wrap("area")
##Do each plot separate
#aialik
a <- ggplot(subset(avg.lengths, area=="aialik"),
aes(as.numeric(as.character(year)), fit.me))+
geom_point(col="red", size=4)+
geom_point(aes(as.numeric(as.character(year)), mean.in), size=4)+
geom_line(aes(as.numeric(as.character(year)), mean.in), linetype="dotted")+
theme(legend.position = "none")+
xlab("aialik")+
ylab("Length(in)")+
# stat_function(fun=function(x)(coef(lm.aialik.ols)[1]+
#                               coef(lm.aialik.ols)[2]*x))+
#stat_function(fun=function(x)(coef(lm.aialik.wls)[1]+
#                              coef(lm.aialik.wls)[2]*x), color="blue")+
stat_function(fun=function(x)(fixef(me.length.aialik)[1]+
fixef(me.length.aialik)[2]*x),
colour="red", size=2)
#capecleare
c <- ggplot(subset(avg.lengths, area=="capecleare"),
aes(as.numeric(as.character(year)), fit.me))+
geom_point(col="red", size=4)+
geom_point(aes(as.numeric(as.character(year)), mean.in), size=4)+
geom_line(aes(as.numeric(as.character(year)), mean.in), linetype="dotted")+
theme(legend.position = "none")+
xlab("capecleare")+
ylab("Length(in)")+
#stat_function(fun=function(x)(coef(lm.cleare.ols)[1]+
#                             coef(lm.cleare.ols)[2]*x))+
#stat_function(fun=function(x)(coef(lm.cleare.wls)[1]+
#                            coef(lm.cleare.wls)[2]*x), color="blue")+
stat_function(fun=function(x)(fixef(me.length.cleare)[1]+
fixef(me.length.cleare)[2]*x),
colour="red", size=2)
#elrington
e <- ggplot(subset(avg.lengths, area=="elrington"),
aes(as.numeric(as.character(year)), fit.me))+
geom_point(col="red", size=4)+
geom_point(aes(as.numeric(as.character(year)), mean.in), size=4)+
geom_line(aes(as.numeric(as.character(year)), mean.in), linetype="dotted")+
theme(legend.position = "none")+
xlab("elrington")+
ylab("Length(in)")+
#stat_function(fun=function(x)(coef(lm.el.ols)[1]+
#                      coef(lm.el.ols)[2]*x))+
#stat_function(fun=function(x)(coef(lm.el.wls)[1]+
#                     coef(lm.el.wls)[2]*x), color="blue")+
stat_function(fun=function(x)(fixef(me.length.el)[1]+
fixef(me.length.el)[2]*x),
colour="red", size=2)
#junken
j <- ggplot(subset(avg.lengths, area=="junken"),
aes(as.numeric(as.character(year)), fit.me))+
geom_point(col="red", size=4)+
geom_point(aes(as.numeric(as.character(year)), mean.in), size=4)+
geom_line(aes(as.numeric(as.character(year)), mean.in), linetype="dotted")+
theme(legend.position = "none")+
xlab("junken")+
ylab("Length(in)")+
# stat_function(fun=function(x)(coef(lm.junken.ols)[1]+
#                  coef(lm.junken.ols)[2]*x))+
# stat_function(fun=function(x)(coef(lm.junken.wls)[1]+
#                 coef(lm.junken.wls)[2]*x), color="blue")+
stat_function(fun=function(x)(fixef(me.length.junken)[1]+
fixef(me.length.junken)[2]*x),
colour="red", size=2)
#resbay
r <- ggplot(subset(avg.lengths, area=="resbay"),
aes(as.numeric(as.character(year)), fit.me))+
geom_point(col="red", size=4)+
geom_point(aes(as.numeric(as.character(year)), mean.in), size=4)+
geom_line(aes(as.numeric(as.character(year)), mean.in), linetype="dotted")+
theme(legend.position = "none")+
xlab("resbay")+
ylab("Length(in)")+
#stat_function(fun=function(x)(coef(lm.resbay.ols)[1]+
#                        coef(lm.resbay.ols)[2]*x))+
#stat_function(fun=function(x)(coef(lm.resbay.wls)[1]+
#                       coef(lm.resbay.wls)[2]*x), color="blue")+
stat_function(fun=function(x)(fixef(me.length.resbay)[1]+
fixef(me.length.resbay)[2]*x),
colour="red", size=2)
grid.arrange(a,c,e,j,r)
summary(lm.cleare.ols)
summary(lm.cleare.wls)
results2 <- data.frame(matrix(c("capecleare", "junken", "resbay",
"aialik", "elrington",
fixef(me.length.cleare)[2],
fixef(me.length.junken)[2], fixef(me.length.resbay)[2],
fixef(me.length.aialik)[2], fixef(me.length.el)[2],
confint(me.length.cleare)[4,1],
confint(me.length.junken)[4,1],
confint(me.length.resbay)[4,1],
confint(me.length.aialik)[4,1],
confint(me.length.el)[4,1],
confint(me.length.cleare)[4,2],
confint(me.length.junken)[4,2],
confint(me.length.resbay)[4,2],
confint(me.length.aialik)[4,2],
confint(me.length.el)[4,2]),
nrow=5, ncol=4, byrow=F))
names(results2) <- c("area", "coef", "le", "ue")
results2$coef <- as.numeric(as.character(results2$coef))
results2$le <- as.numeric(as.character(results2$le))
results2$ue <- as.numeric(as.character(results2$ue))
results2 <- results2 %>%
mutate(incr = 20*coef) %>%
mutate(incr.le=20*le)%>%
mutate(incr.ue=20*ue)
ggplot(results2, aes(area, incr))+
geom_hline(aes(yintercept=0), linetype="dashed")+
geom_segment(aes(x=area, y=incr.le, xend=area, yend=incr.ue), size=2)+
geom_point(size=7, col="darkred")+
ylab("Change in Fish Length 1994-2013")+
theme(axis.text.y = element_text(size=20), axis.text.x=element_text(size=20),
axis.title.y = element_text(size=20), axis.title.x=element_blank())
results2
summary(lm.cleare.wls)
#Cape Cleare
e <- ggplot(subset(avg.lengths, area=="capecleare"),
aes(as.numeric(as.character(year)), fit.me))+
geom_point(col="red", size=6)+
geom_point(aes(as.numeric(as.character(year)), mean.in), size=6)+
geom_line(aes(as.numeric(as.character(year)), mean.in), linetype="dotted")+
theme(legend.position = "none")+
xlab("Cape Cleare")+
ylab("Length(in)")+
stat_function(fun=function(x)(coef(lm.cleare.ols)[1]+
coef(lm.cleare.ols)[2]*x), linetype="dashed",
size=4)+
stat_function(fun=function(x)(coef(lm.cleare.wls)[1]+
coef(lm.cleare.wls)[2]*x),
color="blue", size=2)+
stat_function(fun=function(x)(fixef(me.length.cleare)[1]+
fixef(me.length.cleare)[2]*x),
colour="red", size=2)+
theme(axis.text=element_text(size=20), axis.title=element_text(size=20))
e
slidify("fishpres.Rmd")
slidify("fishpres.Rmd")
slidify("fishpres.Rmd")
slidify("fishpres.Rmd")
slidify("fishpres.Rmd")
slidify("fishpres.Rmd")
slidify("fishpres.Rmd")
slidify("fishpres.Rmd")
slidify("fishpres.Rmd")
slidify("fishpres.Rmd")
qmap("Seward, AK", zoom=4, type="terrain")+
#geom_point(aes(x=-149.4296,y=60.1347), size=7, shape=2)
geom_segment(aes(x=-149.4296, y= 60.1347, xend = -153.863, yend = 65.99024),
arrow= arrow(length=unit(0.25,"inches"), ends="first"), size=3)
?qmap
qmap("Seward, AK", zoom=4, maptype="terrain")+
#geom_point(aes(x=-149.4296,y=60.1347), size=7, shape=2)
geom_segment(aes(x=-149.4296, y= 60.1347, xend = -153.863, yend = 65.99024),
arrow= arrow(length=unit(0.25,"inches"), ends="first"), size=3)
qmap("Seward, AK", zoom=4, maptype="toner")+
#geom_point(aes(x=-149.4296,y=60.1347), size=7, shape=2)
geom_segment(aes(x=-149.4296, y= 60.1347, xend = -153.863, yend = 65.99024),
arrow= arrow(length=unit(0.25,"inches"), ends="first"), size=3)
qmap("Seward, AK", zoom=9, maptype="toner")+
#geom_point(aes(x=-149.4296,y=60.1347), size=7, shape=2)
geom_segment(aes(x=-149.4296, y= 60.1347, xend = -153.863, yend = 65.99024),
arrow= arrow(length=unit(0.25,"inches"), ends="first"), size=3)
gglocator(1)
qmap("Seward, AK", zoom=4, maptype="toner")+
#geom_point(aes(x=-149.4296,y=60.1347), size=7, shape=2)
geom_segment(aes(x=-149.4236, y= 60.12869, xend = -153.863, yend = 65.99024),
arrow= arrow(length=unit(0.25,"inches"), ends="first"), size=3)
qmap("Seward, AK", zoom=9, maptype="toner")+
#geom_point(aes(x=-149.4296,y=60.1347), size=7, shape=2)
geom_segment(aes(x=-149.4236, y= 60.12869, xend = -153.863, yend = 65.99024),
arrow= arrow(length=unit(0.25,"inches"), ends="first"), size=3)
gglocator(1)
qmap("Seward, AK", zoom=4, maptype="toner")+
#geom_point(aes(x=-149.4296,y=60.1347), size=7, shape=2)
geom_segment(aes(x=-149.3995, y= 60.04455, xend = -153.863, yend = 65.99024),
arrow= arrow(length=unit(0.25,"inches"), ends="first"), size=3)
gglocator(1)
qmap("Seward, AK", zoom=8, maptype="toner")+
#geom_point(aes(x=-149.4296,y=60.1347), size=7, shape=2)
geom_segment(aes(x=-149.3995, y= 60.04455, xend = -153.863, yend = 65.99024),
arrow= arrow(length=unit(0.25,"inches"), ends="first"), size=3)
qmap("Seward, AK", zoom=8, maptype="toner")+
#geom_point(aes(x=-149.4296,y=60.1347), size=7, shape=2)
geom_segment(aes(x=-149.4296, y= 60.1347, xend = -153.863, yend = 65.99024),
arrow= arrow(length=unit(0.25,"inches"), ends="first"), size=3)
qmap("Seward, AK", zoom=4, maptype="toner")+
#geom_point(aes(x=-149.4296,y=60.1347), size=7, shape=2)
geom_segment(aes(x=-149.4296, y= 60.1347, xend = -153.863, yend = 65.99024),
arrow= arrow(length=unit(0.25,"inches"), ends="first"), size=3)
gglocator(1)
qmap("Seward, AK", zoom=4, maptype="toner")+
#geom_point(aes(x=-149.4296,y=60.1347), size=7, shape=2)
geom_segment(aes(x=-149.0398, y= 55.69511, xend = -153.863, yend = 65.99024),
arrow= arrow(length=unit(0.25,"inches"), ends="first"), size=3)
qmap("Seward, AK", zoom=4, maptype="toner")+
#geom_point(aes(x=-149.4296,y=60.1347), size=7, shape=2)
geom_segment(aes(x=-149.2398, y= 55.69511, xend = -153.863, yend = 65.99024),
arrow= arrow(length=unit(0.25,"inches"), ends="first"), size=3)
qmap("Seward, AK", zoom=4, maptype="toner")+
#geom_point(aes(x=-149.4296,y=60.1347), size=7, shape=2)
geom_segment(aes(x=-149.2398, y= 57.69511, xend = -153.863, yend = 65.99024),
arrow= arrow(length=unit(0.25,"inches"), ends="first"), size=3)
qmap("Seward, AK", zoom=4, maptype="toner")+
#geom_point(aes(x=-149.4296,y=60.1347), size=7, shape=2)
geom_segment(aes(x=-149.2398, y= 58.69511, xend = -153.863, yend = 65.99024),
arrow= arrow(length=unit(0.25,"inches"), ends="first"), size=3)
qmap("Seward, AK", zoom=4, maptype="toner")+
#geom_point(aes(x=-149.4296,y=60.1347), size=7, shape=2)
geom_segment(aes(x=-149.2398, y= 58.99511, xend = -153.863, yend = 65.99024),
arrow= arrow(length=unit(0.25,"inches"), ends="first"), size=3)
qmap("Seward, AK", zoom=4, maptype="toner")+
#geom_point(aes(x=-149.4296,y=60.1347), size=7, shape=2)
geom_segment(aes(x=-149.2398, y= 58.99511, xend = -154.863, yend = 65.99024),
arrow= arrow(length=unit(0.25,"inches"), ends="first"), size=3)
qmap("Seward, AK", zoom=4, maptype="toner")+
#geom_point(aes(x=-149.4296,y=60.1347), size=7, shape=2)
geom_segment(aes(x=-149.2398, y= 58.99511, xend = -155.863, yend = 65.99024),
arrow= arrow(length=unit(0.25,"inches"), ends="first"), size=3)
qmap("Seward, AK", zoom=4, maptype="toner")+
#geom_point(aes(x=-149.4296,y=60.1347), size=7, shape=2)
geom_segment(aes(x=-149.2398, y= 58.99511, xend = -156.863, yend = 65.99024),
arrow= arrow(length=unit(0.25,"inches"), ends="first"), size=3)
qmap("Seward, AK", zoom=4, maptype="toner")+
#geom_point(aes(x=-149.4296,y=60.1347), size=7, shape=2)
geom_segment(aes(x=-149.2398, y= 58.99511, xend = -156.863, yend = 65.99024),
arrow= arrow(length=unit(0.25,"inches"), ends="first"), size=3)
slidify("fishpres.Rmd")
slidify("fishpres.Rmd")
qmap("Seward, AK", zoom=4, maptype="watercolor")+
#geom_point(aes(x=-149.4296,y=60.1347), size=7, shape=2)
geom_segment(aes(x=-149.2398, y= 58.99511, xend = -156.863, yend = 65.99024),
arrow= arrow(length=unit(0.25,"inches"), ends="first"), size=3)
qmap("Seward, AK", zoom=4, maptype="watercolor")+
#geom_point(aes(x=-149.4296,y=60.1347), size=7, shape=2)
geom_segment(aes(x=-149.2398, y= 58.99511, xend = -156.863, yend = 65.99024),
arrow= arrow(length=unit(0.25,"inches"), ends="first"), size=3)
qmap("Seward, AK", zoom=4, maptype="hybrid")+
#geom_point(aes(x=-149.4296,y=60.1347), size=7, shape=2)
geom_segment(aes(x=-149.2398, y= 58.99511, xend = -156.863, yend = 65.99024),
arrow= arrow(length=unit(0.25,"inches"), ends="first"), size=3)
qmap("Seward, AK", zoom=4, maptype="hybrid")+
#geom_point(aes(x=-149.4296,y=60.1347), size=7, shape=2)
#-149.2398, 58.99511
geom_segment(aes(x=-149.4296, y= 60.1347, xend = -156.863, yend = 65.99024),
arrow= arrow(length=unit(0.25,"inches"), ends="first"), size=3)
slidify("fishpres.Rmd")
slidify("fishpres.Rmd")
slidify("fishpres.Rmd")
slidify("fishpres.Rmd")
slidify("fishpres.Rmd")
slidify("fishpres.Rmd")
slidify("fishpres.Rmd")
ind.census <- read.csv("~/Documents/WritingProject/report/datafiles/census.csv")
###Now look at indicator stat areas with census data
#Nuka is not in census data
change <- list(
'down'="Expected Change: Decrease",
'up'="Expected Change: Increase"
)
change_label <- function(variable,value){
return(change[value])
}
require(ggplot2)
ggplot(ind.census, aes(year, proportion, group=area))+
geom_line(aes(colour=area), size=2)+
geom_point(aes(colour=area), size=6)+
facet_grid(.~expchange, labeller=change_label)
ind.census <- read.csv("~/Documents/WritingProject/report/datafiles/census.csv")
###Now look at indicator stat areas with census data
#Nuka is not in census data
change <- list(
'down'="Expected Change: Decrease",
'up'="Expected Change: Increase"
)
change_label <- function(variable,value){
return(change[value])
}
require(ggplot2)
ggplot(ind.census, aes(year, proportion, group=area))+
geom_line(aes(colour=area), size=1)+
geom_point(aes(colour=area), size=6)+
facet_grid(.~expchange, labeller=change_label)
?thee
?theme
ind.census <- read.csv("~/Documents/WritingProject/report/datafiles/census.csv")
###Now look at indicator stat areas with census data
#Nuka is not in census data
change <- list(
'down'="Expected Change: Decrease",
'up'="Expected Change: Increase"
)
change_label <- function(variable,value){
return(change[value])
}
require(ggplot2)
ggplot(ind.census, aes(year, proportion, group=area))+
geom_line(aes(colour=area), size=1)+
geom_point(aes(colour=area), size=6)+
facet_grid(.~expchange, labeller=change_label)+
theme(strip.text.x=element_text(size=10))
ind.census <- read.csv("~/Documents/WritingProject/report/datafiles/census.csv")
###Now look at indicator stat areas with census data
#Nuka is not in census data
change <- list(
'down'="Expected Change: Decrease",
'up'="Expected Change: Increase"
)
change_label <- function(variable,value){
return(change[value])
}
require(ggplot2)
ggplot(ind.census, aes(year, proportion, group=area))+
geom_line(aes(colour=area), size=1)+
geom_point(aes(colour=area), size=6)+
facet_grid(.~expchange, labeller=change_label)+
theme(strip.text.x=element_text(size=15))
ind.census <- read.csv("~/Documents/WritingProject/report/datafiles/census.csv")
###Now look at indicator stat areas with census data
#Nuka is not in census data
change <- list(
'down'="Expected Change: Decrease",
'up'="Expected Change: Increase"
)
change_label <- function(variable,value){
return(change[value])
}
require(ggplot2)
ggplot(ind.census, aes(year, proportion, group=area))+
geom_line(aes(colour=area), size=1)+
geom_point(aes(colour=area), size=6)+
facet_grid(.~expchange, labeller=change_label)+
ylab("Proportion of Use")
theme(strip.text.x=element_text(size=15), axis.text=element_text(size=18),
axis.title.x=element_blank(), axis.title.y=element_text(size=15))
ind.census <- read.csv("~/Documents/WritingProject/report/datafiles/census.csv")
###Now look at indicator stat areas with census data
#Nuka is not in census data
change <- list(
'down'="Expected Change: Decrease",
'up'="Expected Change: Increase"
)
change_label <- function(variable,value){
return(change[value])
}
require(ggplot2)
ggplot(ind.census, aes(year, proportion, group=area))+
geom_line(aes(colour=area), size=1)+
geom_point(aes(colour=area), size=6)+
facet_grid(.~expchange, labeller=change_label)+
ylab("Proportion of Use")+
theme(strip.text.x=element_text(size=15), axis.text=element_text(size=18),
axis.title.x=element_blank(), axis.title.y=element_text(size=15))
ind.census <- read.csv("~/Documents/WritingProject/report/datafiles/census.csv")
###Now look at indicator stat areas with census data
#Nuka is not in census data
change <- list(
'down'="Expected Change: Decrease",
'up'="Expected Change: Increase"
)
change_label <- function(variable,value){
return(change[value])
}
require(ggplot2)
ggplot(ind.census, aes(year, proportion, group=area))+
geom_line(aes(colour=area), size=1)+
geom_point(aes(colour=area), size=6)+
facet_grid(.~expchange, labeller=change_label)+
ylab("Proportion of Use")+
theme(strip.text.x=element_text(size=15), axis.text=element_text(size=18),
axis.title.x=element_blank(), axis.title.y=element_text(size=15),
legend.key.size=unit(2,"cm"))
ind.census <- read.csv("~/Documents/WritingProject/report/datafiles/census.csv")
###Now look at indicator stat areas with census data
#Nuka is not in census data
change <- list(
'down'="Expected Change: Decrease",
'up'="Expected Change: Increase"
)
change_label <- function(variable,value){
return(change[value])
}
require(ggplot2)
ggplot(ind.census, aes(year, proportion, group=area))+
geom_line(aes(colour=area), size=1)+
geom_point(aes(colour=area), size=6)+
facet_grid(.~expchange, labeller=change_label)+
ylab("Proportion of Use")+
theme(strip.text.x=element_text(size=15), axis.text=element_text(size=18),
axis.title.x=element_blank(), axis.title.y=element_text(size=15),
legend.text.size=unit(2,"cm"))
?theme
ind.census <- read.csv("~/Documents/WritingProject/report/datafiles/census.csv")
###Now look at indicator stat areas with census data
#Nuka is not in census data
change <- list(
'down'="Expected Change: Decrease",
'up'="Expected Change: Increase"
)
change_label <- function(variable,value){
return(change[value])
}
require(ggplot2)
ggplot(ind.census, aes(year, proportion, group=area))+
geom_line(aes(colour=area), size=1)+
geom_point(aes(colour=area), size=6)+
facet_grid(.~expchange, labeller=change_label)+
ylab("Proportion of Use")+
theme(strip.text.x=element_text(size=15), axis.text=element_text(size=18),
axis.title.x=element_blank(), axis.title.y=element_text(size=15),
legend.text=element_text(size=20))
ind.census <- read.csv("~/Documents/WritingProject/report/datafiles/census.csv")
###Now look at indicator stat areas with census data
#Nuka is not in census data
change <- list(
'down'="Expected Change: Decrease",
'up'="Expected Change: Increase"
)
change_label <- function(variable,value){
return(change[value])
}
require(ggplot2)
ggplot(ind.census, aes(year, proportion, group=area))+
geom_line(aes(colour=area), size=1)+
geom_point(aes(colour=area), size=6)+
facet_grid(.~expchange, labeller=change_label)+
ylab("Proportion of Use")+
theme(strip.text.x=element_text(size=15), axis.text=element_text(size=18),
axis.title.x=element_blank(), axis.title.y=element_text(size=15),
legend.text=element_text(size=15))
indicator <- read.csv("~/Documents/WritingProject/report/datafiles/indicator.csv")
ggplot(indicator, aes(YEAR, Proportion, group=area))+
geom_line(aes(colour=area), size=1)+
geom_point(aes(colour=area), size=6)+
facet_grid(expchange~., labeller=change_label)+
ylab("Proportion of Use")+
theme(axis.title.x=element_blank(), axis.text=element_text(size=16),
axis.title.y=element_text(size=15), legend.text=element_text(size=15))
